{"openapi":"3.0.0","info":{"title":"Botpress HITL API - Endpoints to implement","version":"1.0.0","description":"The API you need to implement on your end to receive HITL requests"},"servers":[{"url":"https://{yourServiceBaseUrl}","description":"External Service URL","variables":{"yourServiceBaseUrl":{"default":"YOUR_AGENT_SERVICE.com","description":"The domain of the external service that handles HITL requests"}}}],"components":{"schemas":{"PingPayload":{"type":"object","properties":{"type":{"type":"string","enum":["ping"]}},"required":["type"],"x-readme-ref-name":"PingPayload"},"CreateRemoteConversationPayload":{"type":"object","properties":{"type":{"type":"string","enum":["createRemoteConversation"]},"payload":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"messages":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string"},"author":{"type":"string"},"timestamp":{"type":"string"}},"required":["text"]}}}}},"required":["type","payload"],"x-readme-ref-name":"CreateRemoteConversationPayload"},"CloseRemoteTicketPayload":{"type":"object","properties":{"type":{"type":"string","enum":["closeRemoteTicket"]},"payload":{"type":"object","properties":{"botpressConversationId":{"type":"string"}},"required":["botpressConversationId"]}},"required":["type","payload"],"x-readme-ref-name":"CloseRemoteTicketPayload"},"CreateRemoteUserPayload":{"type":"object","properties":{"type":{"type":"string","enum":["createRemoteUser"]},"payload":{"type":"object","additionalProperties":{"nullable":true},"description":"whatever user payload sent from Botpress"}},"required":["type","payload"],"x-readme-ref-name":"CreateRemoteUserPayload"},"BotSendsMessagePayload":{"type":"object","properties":{"type":{"type":"string","enum":["botSendsMessage"]},"remoteConversationId":{"type":"string","description":"The ID of the conversation on the live agent platform"},"remoteUserId":{"type":"string","description":"The ID of the chat-user on the live agent platform"},"payload":{"type":"object","additionalProperties":{"nullable":true},"description":"The message payload in the botpress format"},"botpressMessageType":{"type":"string"}},"required":["type","remoteConversationId","remoteUserId","payload","botpressMessageType"],"x-readme-ref-name":"BotSendsMessagePayload"},"AgentAssignedPayload":{"type":"object","properties":{"remoteConversationId":{"type":"string","description":"The ID of the conversation on the live agent platform"},"remoteUserId":{"type":"string","description":"The ID of the chat-user on the live agent platform"}},"required":["remoteConversationId","remoteUserId"],"x-readme-ref-name":"AgentAssignedPayload"},"StopHitlPayload":{"type":"object","properties":{"remoteConversationId":{"type":"string","description":"The ID of the conversation on the live agent platform"}},"required":["remoteConversationId"],"x-readme-ref-name":"StopHitlPayload"},"AgentMessagePayload":{"type":"object","properties":{"remoteConversationId":{"type":"string","description":"The ID of the conversation on the live agent platform"},"remoteUserId":{"type":"string","description":"The ID of the chat-user on the live agent platform"},"botpressMessageType":{"type":"string"},"payload":{"type":"object","additionalProperties":{"nullable":true},"description":"The message payload in the botpress format"}},"required":["remoteConversationId","remoteUserId","botpressMessageType","payload"],"x-readme-ref-name":"AgentMessagePayload"},"CreateRemoteConversationResponse":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the conversation / ticket on the live agent platform"}},"required":["id"],"x-readme-ref-name":"CreateRemoteConversationResponse"},"CreateRemoteUserResponse":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the chat-user on the live agent platform"}},"required":["id"],"x-readme-ref-name":"CreateRemoteUserResponse"}},"parameters":{}},"paths":{"/ping":{"post":{"summary":"Ping your service","tags":["Endpoints to implement"],"description":"An authenticated endpoint that allows your service to say it's ready to receive requests. Your service must return a 200 response.","operationId":"pingExternalService","responses":{"200":{"description":"Successful ping."}}}},"/createRemoteConversation":{"post":{"summary":"Create a conversation in your service","tags":["Endpoints to implement"],"description":"Creates a remote conversation on your service. This is required for the HITL process to work. Your service must return payload with an id for the conversation in the live agent system.","operationId":"createRemoteConversation","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","enum":["createRemoteConversation"]},"payload":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"messages":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string"},"author":{"type":"string"},"timestamp":{"type":"string"}},"required":["text"]}}}}},"required":["type","payload"],"x-readme-ref-name":"CreateRemoteConversationPayload"}}}},"responses":{"200":{"description":"Conversation created successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the conversation / ticket on the live agent platform"}},"required":["id"],"x-readme-ref-name":"CreateRemoteConversationResponse"}}}}}}},"/closeRemoteTicket":{"post":{"summary":"Close a ticket","tags":["Endpoints to implement"],"description":"Closes a ticket on your service. Once closed, no further actions are expected for this conversation. Your service must return a 200 response.","operationId":"closeRemoteTicket","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","enum":["closeRemoteTicket"]},"payload":{"type":"object","properties":{"botpressConversationId":{"type":"string"}},"required":["botpressConversationId"]}},"required":["type","payload"],"x-readme-ref-name":"CloseRemoteTicketPayload"}}}},"responses":{"200":{"description":"Ticket closed successfully."}}}},"/createRemoteUser":{"post":{"summary":"Create a user","tags":["Endpoints to implement"],"description":"Creates a user on your service. This is necessary to associate users with conversations in the HITL process. Your service must return payload with an id for the conversation in the live agent system.","operationId":"createRemoteUser","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","enum":["createRemoteUser"]},"payload":{"type":"object","additionalProperties":{"nullable":true},"description":"whatever user payload sent from Botpress"}},"required":["type","payload"],"x-readme-ref-name":"CreateRemoteUserPayload"}}}},"responses":{"200":{"description":"User created successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the chat-user on the live agent platform"}},"required":["id"],"x-readme-ref-name":"CreateRemoteUserResponse"}}}}}}},"/botSendsMessage":{"post":{"summary":"Send a message to the agent","tags":["Endpoints to implement"],"description":"Sends a message from the bot to the agent conversation on your service as part of the HITL process. Your service must return a 200 response.","operationId":"botSendsMessage","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","enum":["botSendsMessage"]},"remoteConversationId":{"type":"string","description":"The ID of the conversation on the live agent platform"},"remoteUserId":{"type":"string","description":"The ID of the chat-user on the live agent platform"},"payload":{"type":"object","additionalProperties":{"nullable":true},"description":"The message payload in the botpress format"},"botpressMessageType":{"type":"string"}},"required":["type","remoteConversationId","remoteUserId","payload","botpressMessageType"],"x-readme-ref-name":"BotSendsMessagePayload"}}}},"responses":{"200":{"description":"Message sent successfully."}}}}},"tags":[],"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}